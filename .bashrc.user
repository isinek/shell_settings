# Don't put duplicate lines in the history and do not add lines that start with a space
export HISTCONTROL=erasedups:ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=10000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

iatest=$(expr index "$-" i)

# Disable the bell
if [[ $iatest -gt 0 ]]; then bind "set bell-style visible"; fi

# Ignore case on auto-completion
# Note: bind used instead of sticking these in .inputrc
if [[ $iatest -gt 0 ]]; then bind "set completion-ignore-case on"; fi

# Show auto-completion list automatically, without double tab
if [[ $iatest -gt 0 ]]; then bind "set show-all-if-ambiguous On"; fi

# force TERM
export TERM="screen-256color"
# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# Fancy prompt
function __setprompt
{
	local LAST_COMMAND=$? # Must come first!
	local use_icons=1

	# Define colors
	local LIGHTGRAY="\033[0;37m"
	local WHITE="\033[1;37m"
	local BLACK="\033[0;30m"
	local DARKGRAY="\033[1;30m"
	local RED="\033[0;31m"
	local LIGHTRED="\033[1;31m"
	local GREEN="\033[0;32m"
	local LIGHTGREEN="\033[1;32m"
	local BROWN="\033[0;33m"
	local YELLOW="\033[1;33m"
	local BLUE="\033[0;34m"
	local LIGHTBLUE="\033[1;34m"
	local MAGENTA="\033[0;35m"
	local LIGHTMAGENTA="\033[1;35m"
	local CYAN="\033[0;36m"
	local LIGHTCYAN="\033[1;36m"
	local NOCOLOR="\033[0m"

	PS1="\[${LIGHTBLUE}\]"
	if [ ${use_icons} -eq 0 ]; then
		PS1+="["
	else
		PS1+=""
	fi

	# Add separator
	if [ ${#PS1} -gt 18 ] && [ ${use_icons} -eq 0 ]; then
		PS1+="|"
	fi
	# Show last two directories of current path
	if [ ${use_icons} -ne 0 ]; then
		PS1+="  "
	fi
	PS1+=" $( hostname ) "

	# Show error exit code if there is one
	if [ ${LAST_COMMAND} -ne 0 ]; then
		# Add separator
		if [ ${#PS1} -gt 18 ] && [ ${use_icons} -eq 0 ]; then
			PS1+="|"
		fi

		PS1+="\[${RED}\]"
		if [ ${use_icons} -ne 0 ]; then
			PS1+="  "
		fi
		PS1+=" ${LAST_COMMAND} \[${LIGHTBLUE}\]"
		first_block=0
	fi

	# Add separator
	if [ ${#PS1} -gt 18 ] && [ ${use_icons} -eq 0 ]; then
		PS1+="|"
	fi
	# Show last two directories of current path
	if [ ${use_icons} -ne 0 ]; then
		PS1+="  "
	fi
	PS1+=" $( pwd | awk -F/ '(NF == 2){ print "/"$NF }; (NF == 3){ prev = NF - 1; print "/"$prev"/"$NF }; (NF > 3){ prev = NF - 1; print ".../"$prev"/"$NF }' ) "

	# Show git branch if in git repo
	git -C . rev-parse 2>/dev/null
	if [ "$?" -eq 0 ]; then
		# Add separator
		if [ ${#PS1} -gt 18 ] && [ ${use_icons} -eq 0 ]; then
			PS1+="|"
		fi
		PS1+="\[${LIGHTMAGENTA}\]"
		# Show last two directories of current path
		if [ ${use_icons} -ne 0 ]; then
			PS1+=" "
		fi
		PS1+=" $( git branch --show-current ) \[${LIGHTBLUE}\]"
		first_block=0
	fi

	if [ ${use_icons} -ne 0 ]; then
		PS1+="   "
	else
		PS1+="]$ "
	fi
	PS1+="\[${NOCOLOR}\]"
}

if [ "$color_prompt" = yes ]; then
	PROMPT_COMMAND='__setprompt'
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# Set the default editor
export EDITOR=nvim
export VISUAL=nvim

